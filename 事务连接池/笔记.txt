课程回顾：
JDBC:java操作数据库的api
需要加载对应数据库的驱动jar

JDBC的使用步骤：
1、加载驱动
2、获取连接
3、获取操作SQL对象
4、执行SQL
5、关闭

需要关闭：
1、流
2、Socket
3、数据库


数据库配置文件：
xxx.properties---Properties类
存储的方式：key=value

ResourceBundle:加载配置文件
使用getXXX方法获取对应key的值




今日内容：

温故：
	Web项目使用JDBC
	Web项目导入jar包的方式：直接将jar复制到WebContent\WEB-INF\lib
	
	通过jdbc创建以下表：
	b_account:账户表
	id 账号 16位，字符串
	name 姓名 50位
	money 余额 
	createtime 开户时间
	updatetime 最后一次更新时间
	
	b_log:流水日志表
	id 序号
	a_id 账号
	money 钱 存钱,取钱-
	msg 备注信息
	time 交易时间
	type 类型 1:开户 2：存钱 3：取钱 4：测试
	注意：数据库设计的时候，最好写出一份设计文档，标记表的意义

一、Transaction：事务
1.1事务是什么？
事务就是保证多条数据操作要么都成功，要么都失败，确保数据的完整性
其实就是将一组相同逻辑的操作放在一起进行操作，全部都成功或都失败
主要用在：多条数据的操作的一致性

1.2事务如何使用？
数据库指令：
	1、start transaction:开启事务
	2、rollback:回滚，取消本次操作
	3、commit:提交，确定本次操作
JAVA代码中使用：JDBC
	1、通过connection.setAutoCommit(false)设置开启事务，true不开启，false开启事务
	2、在try语句块的结尾：connection.commit:提交
	3、在catch中connection.rollback:回滚事务
练习：
1、请自己创建任意表，通过JDBC实现事务的操作	



	
1.3事务的特性(ACID)
	原子性（Atomicity）原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。 
	一致性（Consistency）事务必须使数据库从一个一致性状态变换到另外一个一致性状态。
	隔离性（Isolation）事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。
	持久性（Durability）持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响。
1.4事务的隔离性
隔离性就是设置多个线程并发访问数据时的一种权限
如果没有隔离性：可能会引起：脏读、不可重复读、虚读

SQL事务的隔离级别：
	1、Serializable：可避免脏读、不可重复读、虚读情况的发生。（串行化）
	2、Repeatable read：可避免脏读、不可重复读情况的发生。MySQL默认
	3、Read committed：可避免脏读情况发生。SQL Server |Oracle
	4、Read uncommitted：最低级别，以上情况均无法保证。(读未提交)
	设置事务的隔离性：
	set transaction isolation level 设置事务隔离级别
	查询当前数据库的事务的隔离性：
	select @@tx_isolation	查询当前事务隔离级别

串行化：按照一个个的事务的先后顺序执行



类和对象
类方法和实例方法
全局变量和局部变量

变量的生命周期
1、类变量--静态属性：类第一次加载就声明，类销毁的时候跟着销毁
2、成员变量--实例属性：对象创建的时候，对象被销毁的时候
3、局部变量--定义在代码块内部的就是局部变量，作用域：当前代码块
java中括号：
{}:代码块，类的内容、方法、静态代码块、构造等
[]:数组
():方法
<>:泛型

方法的定义和调用
接口和类的区别










二、连接池




三、作业
请设计一个数据库，用来实现一个小小型的银行管理系统的数据库
要求
1、最少4个表
2、操作数据必须通过JDBC
3、使用事务
4、防止SQL注入
5、使用连接池





























